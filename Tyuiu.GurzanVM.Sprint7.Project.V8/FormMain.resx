<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonMY_GVM.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9GAAAAAASUVORK5CYII=
</value>
  </data>
</root>